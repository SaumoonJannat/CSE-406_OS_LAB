def fcfs(at, bt):
    n = len(at)
    ct, wt, tat = [0] * n, [0] * n, [0] * n

    ct[0] = at[0] + bt[0]
    for i in range(1, n):
        ct[i] = max(ct[i - 1], at[i]) + bt[i]

    for i in range(n):
        tat[i] = ct[i] - at[i]
        wt[i] = tat[i] - bt[i]

    return ct, wt, tat

at = [2, 0, 4]  
bt = [5, 3, 4]  

processes = list(zip(range(len(at)), at, bt))
processes.sort(key=lambda x: x[1])  
pid, at, bt = zip(*processes)  

ct, wt, tat = fcfs(at, bt)

print("PID\tAT\tBT\tCT\tTAT\tWT")
for i in range(len(at)):
    print(f"{pid[i]}\t{at[i]}\t{bt[i]}\t{ct[i]}\t{tat[i]}\t{wt[i]}")