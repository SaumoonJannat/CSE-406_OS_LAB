def fcfs(at, bt):
    n = len(at)
    ct, wt, tat = [0] * n, [0] * n, [0] * n

    ct[0] = bt[0]
    for i in range(1, n):
        ct[i] = max(ct[i - 1], at[i]) + bt[i]

    for i in range(n):
        tat[i] = ct[i] - at[i]
        wt[i] = tat[i] - bt[i]

    return wt, tat

# Input
at, bt = [0, 1, 2, 3], [4, 3, 1, 2]
wt, tat = fcfs(at, bt)

# Output
print("P\tAT\tBT\tWT\tTAT")
for i in range(len(at)):
    print(f"P{i+1}\t{at[i]}\t{bt[i]}\t{wt[i]}\t{tat[i]}")
